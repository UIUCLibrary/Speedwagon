[tox]
envlist = py{38,39,310,311}-{PySide6,cli}
requires =
    setuptools>=30.3.0
isolated_build = true

[tool:pytest]
;testpath = tests
addopts = --verbose

[testenv]
deps =
    pytest
    pytest-mock

whitelist_externals=
    python
    pytest

commands =  pytest --basetemp={envtmpdir} {env:pytest_args:} {posargs}

[testenv:py{38,39,310}-PySide6]
passenv =
    QT_QPA_PLATFORM
    XAUTHORITY
    DISPLAY
    LocalAppData

whitelist_externals=
    python
    pytest

deps =
    -r requirements/requirements-gui.txt
    pytest-qt
    pytest
    pytest-mock

commands =  pytest --basetemp={envtmpdir} {env:pytest_args:} {posargs}

; ======================== tests ========================
[testenv:docs]
deps=
    sphinx
    sphinx-argparse
commands=
    sphinx-build {env:sphinx_args:-W -b html -d "{envtmpdir}/doctrees" docs/source  "{distdir}/html"}

[testenv:mypy]
deps =
    mypy
    lxml
    types-PyYAML
    types-requests

skip_install=True
setenv = MYPY_CACHE_DIR = {temp_dir}/.mypy_cache
commands = mypy {posargs: -p speedwagon}

[testenv:flake8]
description = check the code style
deps =
    flake8
skip_install=True
commands = flake8 {posargs: speedwagon}


[testenv:pylint]
description = check the code style
deps =
    pylint
skip_install=True
commands =  pylint {posargs: speedwagon} --disable import-error


[testenv:doctest]
skip_install = true
deps=
    sphinx
    sphinx-argparse
    PyYAML
    -r requirements-vendor.txt
commands = python -m sphinx -b doctest docs/source "{envtmpdir}/build/docs" -d "{envtmpdir}/build/docs/doctrees"
[testenv:pydocstyle]
skip_install = true
deps=
    pydocstyle
    toml
commands =
    pydocstyle {posargs: {toxinidir}/speedwagon}
[testenv:bandit]
skip_install = true
deps=
    bandit
commands =
    bandit {posargs: --recursive {toxinidir}/speedwagon}

[testenv:ruff]
skip_install = true
deps=
    ruff
commands =
    ruff {posargs: {toxinidir}/speedwagon}
